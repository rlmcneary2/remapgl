{"version":3,"sources":["webpack:///../src/util/is-dev/is-dev.ts","webpack:///../src/util/extractors/extractors.ts","webpack:///../src/hook/useMapView/useMapView.ts","webpack:///../src/map/map-data.tsx","webpack:///../src/map/map-container.tsx","webpack:///../src/map/map.tsx","webpack:///../src/map/map.mdx"],"names":["extractBounds","options","bounds","eventData","fitBoundsOptions","isBoundsOptions","maxZoom","padding","extractCenter","center","isCenterOptions","extractZoom","zoom","isZoomOptions","useMapView","map","animationOptions","motionType","useEffect","nextBounds","fitBounds","linear","undefined","nextCenter","centerEventData","nextZoom","zoomEventData","MapData","children","clones","React","Children","toArray","child","i","arr","type","beforeId","currentIndex","props","id","nextBeforeLayerId","cloneElement","MapContainer","accessToken","as","_bounds","_center","className","fadeDuration","maxBounds","minZoom","style","_zoom","eventListeners","useState","setMap","mapElement","useRef","defaultOptions","Object","freeze","attributionControl","current","mapboxgl","isDev","console","warn","nextMap","MapboxMap","container","on","styleLoadHandler","off","setMaxBounds","setMaxZoom","setMinZoom","setStyle","listeners","prop","startsWith","substr","handlerFactory","toLowerCase","data","eventHandler","createElement","ref","MAPBOXGL_CSS","Map","cssFile","_props","cssAdded","setCssAdded","links","document","getElementsByTagName","length","href","endsWith","cssLink","rel","addEventListener","handleLoad","appendChild","removeEventListener","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","of","isMDXComponent"],"mappings":"uOAAe,K,+DCGR,SAASA,EACdC,GAMA,IAAIC,EACAC,EACAC,GAmDN,SAAyBH,GACvB,QAASA,GAAW,WAAYA,GAnD5BI,CAAgBJ,IACfC,EAAsBD,EAAtBC,OAAQC,EAAcF,EAAdE,UAEXC,EAAmB,CAAEE,QADuBL,EAApCK,QACqCC,QADDN,EAAZM,UAGhCL,EAASD,EAGX,MAAO,CACLC,SACAC,YACAC,oBAIG,SAASI,EACdP,GAEA,IAAIQ,EACAN,EAOJ,OA4BF,SAAyBF,GACvB,QAASA,GAAW,WAAYA,EAnC5BS,CAAgBT,GAGlBQ,EAASR,GAFNQ,EAAsBR,EAAtBQ,OAAQN,EAAcF,EAAdE,WAKN,CACLM,SACAN,aAIG,SAASQ,EACdV,GAEA,IAAIW,EACAT,EACJ,GAqBF,SAAuBF,GACrB,QAASA,GAA8B,iBAAZA,EAtBvBY,CAAcZ,GAAU,OACFA,EAArBE,EADuB,EACvBA,UAAWS,EADY,EACZA,UACLX,IACTW,EAAOX,GAGT,MAAO,CACLE,YACAS,Q,iqBC/CG,SAASE,EACdC,EACAC,EACAC,EACAf,EACAO,EACAG,GAEAM,oBAAU,WACR,GAAKH,GAAQb,EAAb,CADc,MAK4BF,EAAcE,GAAxCiB,EALF,EAKNjB,OAAoBC,EALd,EAKcA,UAE5BY,EAAIK,UACFD,EACAH,GAAoBC,EAApB,KACSD,EADT,CAC2BK,OAAuB,SAAfJ,SAC/BK,EACJnB,KAED,CAACD,IAEJgB,oBAAU,WACR,GAAKH,EAAL,CADc,IASVZ,EATU,EAK6CK,EAAcC,GAAzDc,EALF,EAKNd,OAA+Be,EALzB,EAKcrB,UALd,EAMuCQ,EAAYC,GAAnDa,EANA,EAMNb,KAA2Bc,EANrB,EAMUvB,UAElBF,EAAkC,GAEpCW,IACFX,EAAQW,KAAOa,EACftB,EAAYuB,GAGVjB,IACFR,EAAQQ,OAASc,EACjBpB,EAAY,EAAH,GAAQA,EAAR,GAAsBqB,IAGjCT,GAAOE,GAAc,QAAlB,MAA8BhB,EAASE,KACzC,CAACM,EAAQG,I,20BClDRe,EAAoB,SAAC,GAA8B,IAA5BC,EAA4B,EAA5BA,SAMrBC,EAASC,IAAMC,SAClBC,QAAQJ,GACRb,IAAI,SAACkB,EAAOC,EAAGC,GACd,GAAI,mBAAqBF,EAAcG,KAAM,CAC3C,IAAMC,EAkBd,SAA2BC,EAAsBV,GAG/C,IAAK,IAAIM,EAAII,EAAe,GAAI,EAAIJ,EAAGA,IACrC,GAAI,mBAAqBN,EAASM,GAAWE,KAC3C,OAAOR,EAASM,GAAGK,MAAMC,GAI7B,MAAO,GA3BgBC,CAAkBP,EAAGC,GACtC,OAAOL,IAAMY,aAAaT,EAAc,CAAEI,aAG5C,OAAOJ,IAGX,OAAO,8BAAGJ,IAGGF,I,8gBCAf,IAAMgB,EAA4C,SAAC,GAgBY,IAf7DC,EAe6D,EAf7DA,YACA5B,EAc6D,EAd7DA,iBAc6D,IAb7D6B,UAa6D,MAbxD,MAawD,EAZrDC,EAYqD,EAZ7D5C,OAY6D,IAX7DO,OAAQsC,OAWqD,MAX3C,CAAEtC,OAAQ,EAAE,WAAY,aAWmB,EAV7DmB,EAU6D,EAV7DA,SACAoB,EAS6D,EAT7DA,UACAC,EAQ6D,EAR7DA,aACAC,EAO6D,EAP7DA,UACA5C,EAM6D,EAN7DA,QACA6C,EAK6D,EAL7DA,QACAlC,EAI6D,EAJ7DA,WAI6D,IAH7DmC,aAG6D,MAHrD,sCAGqD,MAF7DxC,KAAMyC,OAEuD,MAF/C,CAAEzC,KAAM,KAEuC,EAD1D0C,E,oIAC0D,kKACvCC,qBAAfxC,EADsD,KACjDyC,EADiD,KAEvDC,EAAaC,mBACnB5C,EACEC,EACAC,EACAC,EACA6B,EACAC,EACAM,GAGF,IAAMM,EAAiBC,OAAOC,OAAO,CACnCC,oBAAoB,IAoHtB,OAhHA5C,oBAAU,WAER,IAAIH,GAAQ0C,EAAWM,QAAvB,CAIMC,IAASpB,YAEJqB,GAETC,QAAQC,KAAK,yCAHZH,IAASpB,YAAsBA,EAPpB,MAauBE,EAAU9C,EAAc8C,GAAW,GAAhE5C,EAbM,EAaNA,OAAQE,EAbF,EAaEA,iBACRK,EAAWD,EAAcuC,GAAzBtC,OACAG,EAASD,EAAY0C,GAArBzC,KAEFwD,EAAU,IAAIC,M,2UAAJ,IACXV,EADW,CAEdzD,SACAO,SACA6D,UAAWb,EAAWM,QACtBd,eACA7C,mBACA8C,YACA5C,UACA6C,UACAC,QACAxC,UAQFwD,EAAQG,GAAG,YALX,SAASC,IACPJ,EAAQK,IAAI,YAAaD,GACzBhB,EAAOY,OAIR,CACDxB,EACAE,EACAC,EACAY,EACAV,EACAlC,EACAmC,EACA5C,EACA6C,EACAK,EACAJ,EACAC,IAGFnC,oBAAU,WACJ+C,GAAYD,IAASpB,aAEvBsB,QAAQC,KAAK,6DAEd,CAACvB,IAKJ1B,oBAAU,WACJH,GAAOmC,GACTnC,EAAI2D,aAAaxB,IAElB,CAACA,IAEJhC,oBAAU,WACJH,GAA0B,iBAAZT,GAChBS,EAAI4D,WAAWrE,IAEhB,CAACA,IAEJY,oBAAU,WACJH,GAA0B,iBAAZoC,GAChBpC,EAAI6D,WAAWzB,IAEhB,CAACA,IAEJjC,oBAAU,WACJH,GAAOqC,GACTrC,EAAI8D,SAASzB,IAEd,CAACA,IAEJlC,oBAAU,WACR,GAAKH,EAAL,CAQA,IAAM+D,EAAY,GAClB,IAAK,IAAMC,KAAQzB,EACjB,GAAIyB,EAAKC,WAAW,MAAO,CACzB,IAAM5C,EAAO2C,EAAKE,OAAO,GACzBH,EAAU1C,GAAQ8C,EAAe9C,GACjCrB,EAAIwD,GAAGnC,EAAK+C,cAAeL,EAAU1C,IAIzC,OAAO,WAEL,IAAK,IAAMA,KAAQ0C,EACjB/D,EAAI0D,IAAIrC,EAAK+C,cAAeL,EAAU1C,KAhB1C,SAAS8C,EAAe9C,GACtB,OAAO,SAACgD,GAAD,OAuCb,SAAsBhD,EAAckB,EAAqB8B,GACvD9B,EAAe,KAAKlB,GAAQgD,GAxCFC,CAAajD,EAAMkB,EAAgB8B,MAkB1D,CAAC9B,IAEGxB,IAAMwD,cACXzC,EACA,CACEG,YACAuC,IAAK9B,GAEP1C,GACE,YAAC,IAAD,CAAoBA,IAAKA,GACvB,YAAC,EAAD,KACGa,MAOIe,I,ohBCvLf,IAAM6C,EAAe,2DAKN,SAASC,EAAT,GAI2C,IAHxD7D,EAGwD,EAHxDA,SAGwD,IAFxD8D,eAEwD,MAF9CF,EAE8C,EADrDG,E,oIACqD,6BACxBpC,oBAAS,GAAlCqC,EADiD,KACvCC,EADuC,KA0CxD,OAtCA3E,oBAAU,WACR,IAAI0E,EAAJ,CAMA,IAFA,IAAME,EAAQC,SAASC,qBAAqB,QAEnC9D,EAAI,EAAGA,EAAI4D,EAAMG,OAAQ/D,IAEhC,GADO4D,EAAM5D,GACJgE,KAAKC,SAAS,iBAMrB,OALAN,GAAY,QACR5B,GAEFC,QAAQC,KAAK,yDAUnB,IAAMiC,EAAUL,SAAST,cAAc,QASvC,OARAc,EAAQF,KAAOR,EACfU,EAAQC,IAAM,aACdD,EAAQE,iBAAiB,OAAQC,GACjCH,EAAQE,iBAAiB,QAASC,GAErBR,SAASC,qBAAqB,QAAQ,GAC9CQ,YAAYJ,GAEV,WACLA,EAAQK,oBAAoB,OAAQF,GACpCH,EAAQK,oBAAoB,QAASF,IAfvC,SAASA,IACPV,GAAY,KAgBb,CAACD,EAAUC,IAEPD,EAAW,YAAC,EAAiBD,EAAS/D,GAA2B,K,+sBC/CnE,IAAM8E,EAAe,Q,iMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGxE,E,oIACF,mBACD,OAAO,YAACqE,EAAD,KAAeD,EAAiBpE,EAAhC,CAAuCwE,WAAYA,EAAYC,QAAQ,cAI5E,iBAAQ,CACN,GAAM,OADR,OAGA,4BAAW,0BAAYC,WAAW,KAAvB,UAAX,iIAA+L,0BAAYA,WAAW,KAAvB,eAA/L,aAAoQ,mBAAGA,WAAW,KAAQ,CACtR,KAAQ,iEADwP,qCAApQ,0DAGA,oJAAmI,mBAAGA,WAAW,KAAQ,CACrJ,KAAQ,YADuH,UAAnI,6EAEiG,mBAAGA,WAAW,KAAQ,CACnH,KAAQ,WADqF,SAFjG,gBAKA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOC,GAAIzB,EAAKuB,QAAQ,UACxB,iBAAQ,CACN,GAAM,UADR,UAGA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,wmBAkCL,iBAAQ,CACN,GAAM,oBADR,oBAGA,iBAAQ,CACN,GAAM,oBADR,oBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,aAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,wDAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,6BAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,+HAMN,iBAAQ,CACN,GAAM,iBADR,iBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WACH,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,mIAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,0FAMN,iBAAQ,CACN,GAAM,iBADR,iBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,WACH,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,yGAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,0FAMN,iBAAQ,CACN,GAAM,UADR,UAGA,wLACF,0BAAYA,WAAW,KAAvB,oBADE,MACiE,0BAAYA,WAAW,KAAvB,kCACjE,iBAAQ,CACN,GAAM,gBADR,gBAGA,uKACF,0BAAYA,WAAW,KAAvB,qBACE,iBAAQ,CACN,GAAM,mBADR,mBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gDAMN,iBAAQ,CACN,GAAM,gBADR,gBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,sHAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,mEAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,mBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,mGAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,yFAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,mBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,0KAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,6HAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,sBAMN,iBAAQ,CACN,GAAM,iBADR,iBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,4CAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,4DAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,8CAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,KAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,0GAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oEAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,OAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,qCAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,KAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,sBAMN,iBAAQ,CACN,GAAM,iBADR,iBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,4CAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gFAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,6FAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,8CAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,KAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,8HAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,KAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,sFAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oEAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,OAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,qCAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,KAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,sBAMN,iBAAQ,CACN,GAAM,iBADR,iBAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,4CAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,8CAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oEAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,OAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,qCAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,KAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,sBAMN,iBAAQ,CACN,GAAM,cADR,cAGA,+GACF,0BAAYA,WAAW,KAAvB,4BACE,iBAAQ,CACN,GAAM,eADR,eAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,wFAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,sBAAQA,WAAW,MAAnB,SACH,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kC,wLAUVH,EAAWK,gBAAiB","file":"component---src-map-map-mdx-cff43c233baf7f323a19.js","sourcesContent":["export default !!(process.env.NODE_ENV && process.env.NODE_ENV === \"development\");\n","import { BoundsOptions, CenterOptions, FitBoundsOptions, LngLat, LngLatBounds, ZoomOptions } from \"../../types/location\";\n\n\nexport function extractBounds(\n  options: BoundsOptions | LngLatBounds\n): {\n  bounds: LngLatBounds;\n  eventData: {[key: string]: any} | undefined;\n  fitBoundsOptions: FitBoundsOptions | undefined\n} {\n  let bounds: LngLatBounds;\n  let eventData: {[key: string]: any} | undefined;\n  let fitBoundsOptions: FitBoundsOptions | undefined;\n  if (isBoundsOptions(options)) {\n    ({ bounds, eventData } = options);\n    const { maxZoom: boundsMaxZoom, padding } = options;\n    fitBoundsOptions = { maxZoom: boundsMaxZoom, padding };\n  } else {\n    bounds = options;\n  }\n\n  return {\n    bounds,\n    eventData,\n    fitBoundsOptions\n  };\n}\n\nexport function extractCenter(\n  options: CenterOptions | LngLat\n): { center: LngLat; eventData: {[key: string]: any} | undefined; } {\n  let center: LngLat;\n  let eventData: {[key: string]: any} | undefined;\n  if (isCenterOptions(options)) {\n    ({ center, eventData } = options);\n  } else {\n    center = options;\n  }\n\n  return {\n    center,\n    eventData\n  };\n}\n\nexport function extractZoom(\n  options: number | ZoomOptions | undefined\n): { zoom: number | undefined; eventData: {[key: string]: any} | undefined; } {\n  let zoom: number | undefined;\n  let eventData: {[key: string]: any} | undefined;\n  if (isZoomOptions(options)) {\n    ({ eventData, zoom } = (options as ZoomOptions));\n  } else if (options) {\n    zoom = options;\n  }\n\n  return {\n    eventData,\n    zoom\n  };\n}\n\n\nfunction isBoundsOptions(options: LngLatBounds | BoundsOptions | undefined): options is BoundsOptions {\n  return !!options && \"bounds\" in options;\n}\n\nfunction isCenterOptions(options: LngLat | CenterOptions | undefined): options is CenterOptions {\n  return !!options && \"center\" in options;\n}\n\nfunction isZoomOptions(options: number | ZoomOptions | undefined): options is ZoomOptions {\n  return !!options && typeof options === \"object\";\n}\n","import { CameraOptions, Map as MapboxMap } from \"mapbox-gl\";\nimport { useEffect } from \"react\";\nimport { AnimationOptions, BoundsOptions, CenterOptions, FitBoundsOptions, LngLat, LngLatBounds, MotionType, ZoomOptions } from \"../../types/location\";\nimport { extractBounds, extractCenter, extractZoom } from \"../../util/extractors/extractors\";\n\n\n/**\n * A hook that updates the camera's view of the map when bounds, center, or zoom\n * change. Takes options that define the location and the camera motion to get\n * there.\n */\nexport function useMapView(\n  map: MapboxMap | undefined,\n  animationOptions: AnimationOptions | undefined,\n  motionType: MotionType | undefined,\n  bounds: Bounds,\n  center: Center,\n  zoom: Zoom\n) {\n  useEffect(() => {\n    if (!map || !bounds) {\n      return;\n    }\n\n    const { bounds: nextBounds, eventData } = extractBounds(bounds);\n\n    map.fitBounds(\n      nextBounds,\n      animationOptions && motionType\n        ? { ...animationOptions, linear: motionType === \"ease\" }\n        : undefined,\n      eventData\n    );\n  }, [bounds]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const { center: nextCenter, eventData: centerEventData } = extractCenter(center);\n    const { zoom: nextZoom, eventData: zoomEventData } = extractZoom(zoom);\n\n    const options: Partial<CameraOptions> = {};\n    let eventData: any;\n    if (zoom) {\n      options.zoom = nextZoom;\n      eventData = zoomEventData;\n    }\n\n    if (center) {\n      options.center = nextCenter;\n      eventData = { ...eventData, ...centerEventData };\n    }\n\n    map[`${motionType || \"jump\"}To`](options, eventData);\n  }, [center, zoom]);\n}\n\n\ntype Bounds = LngLatBounds | BoundsOptions | undefined;\ntype Center = LngLat | CenterOptions;\ntype Zoom = number | ZoomOptions;\n","import React from \"react\";\n\n\n/**\n * Gather information when both the context provider and the map have to exist.\n */\nconst MapData: React.FC = ({ children }): JSX.Element => {\n  // This code is part of the synchronization of the order of the layers in the\n  // map-container component with the layers in the mapboxgl map. It iterates\n  // over all the children and determines the layers' order, it passes a\n  // \"beforeId\" prop to each layer clone so the clone knows where it belongs in\n  // the map object and can update its position if needed.\n  const clones = React.Children\n    .toArray(children)\n    .map((child, i, arr) => {\n      if (\"isRemapGLLayer\" in (child as any).type) {\n        const beforeId = nextBeforeLayerId(i, arr);\n        return React.cloneElement(child as any, { beforeId });\n      }\n\n      return child;\n    });\n\n  return <>{clones}</>;\n};\n\nexport default MapData;\n\n\n/**\n * Find the ID of the layer that is before the current one.\n * @param currentIndex Index of the current layer\n * @param children All the children of this component.\n */\nfunction nextBeforeLayerId(currentIndex: number, children: any[]) {\n  // The map's layers are the reverse of how the layers appear in the component\n  // as children.\n  for (let i = currentIndex - 1; -1 < i; i--) {\n    if (\"isRemapGLLayer\" in (children[i] as any).type) {\n      return children[i].props.id;\n    }\n  }\n\n  return \"\";\n}\n","import mapboxgl, { Map as MapboxMap } from \"mapbox-gl\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useMapView } from \"../hook/useMapView/useMapView\";\nimport { EventData } from \"../types/event\";\nimport {\n  AnimationOptions,\n  BoundsOptions,\n  CenterOptions,\n  LngLat,\n  LngLatBounds,\n  MotionType,\n  ZoomOptions\n} from \"../types/location\";\nimport {\n  extractBounds,\n  extractCenter,\n  extractZoom\n} from \"../util/extractors/extractors\";\nimport isDev from \"../util/is-dev/is-dev\";\nimport MapContextProvider from \"./map-context\";\nimport MapData from \"./map-data\";\n\n\n/**\n * Creates the HTML object for the map and a MaboxGL Map object.\n */\nconst MapContainer: React.FC<MapContainerProps> = ({\n  accessToken,\n  animationOptions,\n  as = \"div\",\n  bounds: _bounds,\n  center: _center = { center: [-68.2954881, 44.3420759] },\n  children,\n  className,\n  fadeDuration,\n  maxBounds,\n  maxZoom,\n  minZoom,\n  motionType,\n  style = \"mapbox://styles/mapbox/outdoors-v10\",\n  zoom: _zoom = { zoom: 9.5 },\n  ...eventListeners\n}: React.PropsWithChildren<MapContainerProps>): JSX.Element => {\n  const [map, setMap] = useState<MapboxMap>();\n  const mapElement = useRef<HTMLElement>();\n  useMapView(\n    map,\n    animationOptions,\n    motionType,\n    _bounds,\n    _center,\n    _zoom\n  );\n\n  const defaultOptions = Object.freeze({\n    attributionControl: false // This is controlled by the Attribution component.\n  });\n\n  // Create the one and only MapboxGL map object.\n  useEffect(() => {\n    // Once the map exists there is nothing else for this hook to do.\n    if (map || !mapElement.current) {\n      return;\n    }\n\n    if (!(mapboxgl.accessToken as any)) {\n      (mapboxgl.accessToken as any) = accessToken;\n    } else if (isDev) {\n      // tslint:disable-next-line: no-console\n      console.warn(\"The accessToken has already been set.\");\n    }\n\n    const { bounds, fitBoundsOptions } = _bounds ? extractBounds(_bounds) : {} as any;\n    const { center } = extractCenter(_center);\n    const { zoom } = extractZoom(_zoom);\n\n    const nextMap = new MapboxMap({\n      ...defaultOptions,\n      bounds,\n      center,\n      container: mapElement.current,\n      fadeDuration,\n      fitBoundsOptions,\n      maxBounds,\n      maxZoom,\n      minZoom,\n      style,\n      zoom\n    });\n\n    function styleLoadHandler() {\n      nextMap.off(\"styledata\", styleLoadHandler);\n      setMap(nextMap);\n    }\n\n    nextMap.on(\"styledata\", styleLoadHandler);\n  }, [\n    accessToken,\n    _bounds,\n    _center,\n    defaultOptions,\n    fadeDuration,\n    map,\n    maxBounds,\n    maxZoom,\n    minZoom,\n    setMap,\n    style,\n    _zoom\n  ]);\n\n  useEffect(() => {\n    if (isDev && !!(mapboxgl.accessToken as any)) {\n      // tslint:disable-next-line: no-console\n      console.warn(\"The accessToken can not be changed once it has been set.\");\n    }\n  }, [accessToken]);\n\n  /**\n   * Update the map when props change.\n   */\n  useEffect(() => {\n    if (map && maxBounds) {\n      map.setMaxBounds(maxBounds);\n    }\n  }, [maxBounds]);\n\n  useEffect(() => {\n    if (map && typeof maxZoom === \"number\") {\n      map.setMaxZoom(maxZoom);\n    }\n  }, [maxZoom]);\n\n  useEffect(() => {\n    if (map && typeof minZoom === \"number\") {\n      map.setMinZoom(minZoom);\n    }\n  }, [minZoom]);\n\n  useEffect(() => {\n    if (map && style) {\n      map.setStyle(style);\n    }\n  }, [style]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    function handlerFactory(type: string) {\n      return (data: any) => eventHandler(type, eventListeners, data);\n    }\n\n    const listeners = {};\n    for (const prop in eventListeners) {\n      if (prop.startsWith(\"on\")) {\n        const type = prop.substr(2);\n        listeners[type] = handlerFactory(type);\n        map.on(type.toLowerCase(), listeners[type]);\n      }\n    }\n\n    return () => {\n      // tslint:disable-next-line: forin\n      for (const type in listeners) {\n        map.off(type.toLowerCase(), listeners[type]);\n      }\n    };\n  }, [eventListeners]);\n\n  return React.createElement(\n    as,\n    {\n      className,\n      ref: mapElement\n    },\n    map && (\n      <MapContextProvider map={map}>\n        <MapData>\n          {children}\n        </MapData>\n      </MapContextProvider>\n    )\n  );\n};\n\nexport default MapContainer;\n\n\nfunction eventHandler(type: string, eventListeners: any, data: any) {\n  eventListeners[`on${type}`](data);\n}\n\n\nexport interface MapContainerProps {\n  /**\n   * Sets the map's access token.\n   */\n  accessToken: string;\n  /**\n   * Options common to camera animation through bounds, center, or zoom\n   */\n  animationOptions?: AnimationOptions;\n  /**\n   * The name of an HTML element that hosts the map; defaults to div.\n   */\n  as?: string;\n  /**\n   * Pans and zooms the map to contain its visible area within the specified\n   * geographical bounds. Changing this value will cause the map position/zoom\n   * to change. The appearance of the transition can be controlled through\n   * animationOptions and motionType.\n   */\n  bounds?: LngLatBounds | BoundsOptions;\n  /**\n   * The geographical center point of the map. Changing this value will cause\n   * the map position to change. The appearance of the transition can be\n   * controlled through animationOptions and motionType.\n   */\n  center?: LngLat | CenterOptions;\n  /**\n   * A class name to set on the containing DIV element.\n   */\n  className?: string;\n  /**\n   * Controls the duration of the fade-in/fade-out animation for label\n   * collisions, in milliseconds.\n   */\n  fadeDuration?: number;\n  /**\n   * The map will be constrained to the given bounds.\n   */\n  maxBounds?: LngLatBounds;\n  /**\n   * The maximum zoom level of the map (0-24).\n   */\n  maxZoom?: number;\n  /**\n   * The minimum zoom level of the map (0-24).\n   */\n  minZoom?: number;\n  /**\n   * How the camera moves when transitioning from one location to another\n   * through bounds, center, or zoom.\n   */\n  motionType?: MotionType;\n  /**\n   * Fired when a \"box zoom\" interaction ends.\n   */\n  onBoxzoomcancel?: (data: mapboxgl.MapBoxZoomEvent) => void;\n  /**\n   * Fired when a \"box zoom\" interaction ends.\n   */\n  onBoxzoomend?: (data: mapboxgl.MapBoxZoomEvent) => void;\n  /**\n   * Fired when a \"box zoom\" interaction starts.\n   */\n  onBoxzoomstart?: (data: mapboxgl.MapBoxZoomEvent) => void;\n  /**\n   * Fired when a pointing device (usually a mouse) is pressed and released at\n   * the same point on the map.\n   */\n  onClick?: (data: mapboxgl.MapMouseEvent) => void;\n  /**\n   * Fired when the right button of the mouse is clicked or the context menu key\n   * is pressed within the map.\n   */\n  onContextmenu?: (data: mapboxgl.MapMouseEvent) => void;\n  /**\n   * Fired when a pointing device (usually a mouse) is clicked twice at the same\n   * point on the map.\n   */\n  onDblclick?: (data: mapboxgl.MapMouseEvent) => void;\n  /**\n   * Fired when any map data loads or changes.\n   */\n  onData?: (data: mapboxgl.MapDataEvent) => void;\n  /**\n   * Fired when any map data (style, source, tile, etc) begins loading or\n   * changing asynchronously. All dataloading events are followed by a data or\n   * error event.\n   */\n  onDataloading?: (data: mapboxgl.MapDataEvent) => void;\n  /**\n   * Fired repeatedly during a \"drag to pan\" interaction..\n   */\n  onDrag?: (data: mapboxgl.MapMouseEvent | mapboxgl.MapTouchEvent) => void;\n  /**\n   * Fired when a \"drag to pan\" interaction ends.\n   */\n  onDragend?: (data: EventData) => void;\n  /**\n   * Fired when a \"drag to pan\" interaction starts.\n   */\n  onDragstart?: (data: EventData) => void;\n  /**\n   * Fired when an error occurs. This is GL JS's primary error reporting\n   * mechanism. We use an event instead of throw to better accommodate\n   * asyncronous operations. If no listeners are bound to the error event, the\n   * error will be printed to the console.\n   */\n  onError?: (data: { error: { message: string } }) => void;\n  /**\n   * Fired after the last frame rendered before the map enters an \"idle\" state:\n   * no camera transitions are in progress, all currently requested tiles have\n   * loaded, all fade/transition animations have completed.\n   */\n  onIdle?: () => void;\n  /**\n   * Fired immediately after all necessary resources have been downloaded and\n   * the first visually complete rendering of the map has occurred.\n   */\n  onLoad?: () => void;\n  /**\n   * Fired when a pointing device (usually a mouse) is pressed within the map.\n   */\n  onMousedown?: (data: mapboxgl.MapMouseEvent) => void;\n  /**\n   * Fired when a pointing device (usually a mouse) is moved within the map.\n   */\n  onMousemove?: (data: mapboxgl.MapMouseEvent) => void;\n  /**\n   * Fired when a point device (usually a mouse) leaves the map's canvas.\n   */\n  onMouseout?: (data: mapboxgl.MapMouseEvent) => void;\n  /**\n   * Fired when a pointing device (usually a mouse) is moved within the map.\n   */\n  onMouseover?: (data: mapboxgl.MapMouseEvent) => void;\n  /**\n   * Fired when a pointing device (usually a mouse) is released within the map.\n   */\n  onMouseup?: (data: mapboxgl.MapMouseEvent) => void;\n  /**\n   * Fired repeatedly during an animated transition from one view to another, as\n   * the result of either user interaction or a fly transition.\n   */\n  onMove?: (data: mapboxgl.MapMouseEvent | mapboxgl.MapTouchEvent) => void;\n  /**\n   * Fired just after the map completes a transition from one view to another,\n   * as the result of either user interaction or a jump transition.\n   */\n  onMoveend?: (data: EventData) => void;\n  /**\n   * Fired just before the map begins a transition from one view to another, as\n   * the result of either user interaction or a jump transition.\n   */\n  onMovestart?: (data: EventData) => void;\n  /**\n   * Fired whenever the map's pitch (tilt) changes as the result of either user\n   * interaction or a fly transition.\n   */\n  onPitch?: (data: EventData) => void;\n  /**\n   * Fired whenever the map's pitch (tilt) finishes changing as the result of\n   * either user interaction or a fly transition.\n   */\n  onPitchend?: (data: EventData) => void;\n  /**\n   * Fired whenever the map's pitch (tilt) begins a change as the result of\n   * either user interaction or a fly transition.\n   */\n  onPitchstart?: (data: EventData) => void;\n  /**\n   * Fired immediately after the map has been removed.\n   */\n  onRemove?: () => void;\n  /**\n   * Fired whenever the map is drawn to the screen, as the result of: a change\n   * to the map's position, zoom, pitch, or bearing; a change to the map's\n   * style; a change to a GeoJSON source; the loading of a vector tile, GeoJSON\n   * file, glyph, or sprite.\n   */\n  onRender?: () => void;\n  /**\n   * Fired immediately after the map has been resized.\n   */\n  onResize?: () => void;\n  /**\n   * Fired repeatedly during a \"drag to rotate\" interaction.\n   */\n  onRotate?: (data: mapboxgl.MapMouseEvent | mapboxgl.MapTouchEvent) => void;\n  /**\n   * Fired when a \"drag to rotate\" interaction ends.\n   */\n  onRotateend?: (data: mapboxgl.MapMouseEvent | mapboxgl.MapTouchEvent) => void;\n  /**\n   * Fired when a \"drag to rotate\" interaction starts.\n   */\n  onRotatestart?: (data: mapboxgl.MapMouseEvent | mapboxgl.MapTouchEvent) => void;\n  /**\n   * Fired when one of the map's sources loads or changes, including if a tile\n   * belonging to a source loads or changes.\n   */\n  onSourcedata?: (data: mapboxgl.MapDataEvent) => void;\n  /**\n   * Fired when one of the map's sources begins loading or changing\n   * asynchronously. All sourcedataloading events are followed by a sourcedata\n   * or error event.\n   */\n  onSourcedataloading?: (data: mapboxgl.MapDataEvent) => void;\n  /**\n   * Fired when the map's style loads or changes.\n   */\n  onStyledata?: (data: mapboxgl.MapDataEvent) => void;\n  /**\n   * Fired when the map's style begins loading or changing asynchronously. All\n   * styledataloading events are followed by a styledata or error event.\n   */\n  onStyledataloading?: (data: mapboxgl.MapDataEvent) => void;\n  /**\n   * Fired when an icon or pattern needed by the style is missing. The missing\n   * image can be added within this event listener callback to prevent the image\n   * from being skipped. This event can be used to dynamically generate icons\n   * and patterns.\n   */\n  onStyleimagemissing?: (data: string) => void;\n  /**\n   * Fired when a touchcancel event occurs within the map.\n   */\n  onTouchcancel?: (data: mapboxgl.MapTouchEvent) => void;\n  /**\n   * Fired when a touchend event occurs within the map.\n   */\n  onTouchend?: (data: mapboxgl.MapTouchEvent) => void;\n  /**\n   * Fired when a touchmove event occurs within the map.\n   */\n  onTouchmove?: (data: mapboxgl.MapTouchEvent) => void;\n  /**\n   * Fired when a touchstart event occurs within the map.\n   */\n  onTouchstart?: (data: mapboxgl.MapTouchEvent) => void;\n  /**\n   * Fired when the WebGL context is lost.\n   */\n  onWebglcontextlost?: () => void;\n  /**\n   * Fired when the WebGL context is restored.\n   */\n  onWebglcontextrestored?: () => void;\n  /**\n   * Fired when a wheel event occurs within the map.\n   */\n  onWheel?: (data: mapboxgl.MapWheelEvent) => void;\n  /**\n   * Fired repeatedly during an animated transition from one zoom level to\n   * another, as the result of either user interaction or a fly transition.\n   */\n  onZoom?: (data: mapboxgl.MapMouseEvent | mapboxgl.MapTouchEvent) => void;\n  /**\n   * Fired just after the map completes a transition from one zoom level to\n   * another, as the result of either user interaction or a fly transition.\n   */\n  onZoomend?: (data: mapboxgl.MapMouseEvent | mapboxgl.MapTouchEvent) => void;\n  /**\n   * Fired just before the map begins a transition from one zoom level to\n   * another, as the result of either user interaction or a fly transition.\n   */\n  onZoomstart?: (data: mapboxgl.MapMouseEvent | mapboxgl.MapTouchEvent) => void;\n  /**\n   * The map's Mapbox style. This must be an a JSON object conforming to the\n   * schema described in the Mapbox Style Specification, or a URL to such JSON.\n   */\n  style?: string;\n  /**\n   * The zoom level of the map. The appearance of the transition can be\n   * controlled through animationOptions and motionType.\n   */\n  zoom?: number | ZoomOptions;\n}\n","import React, { useEffect, useState } from \"react\";\nimport isDev from \"../util/is-dev/is-dev\";\nimport MapContainer, { MapContainerProps } from \"./map-container\";\n\nconst MAPBOXGL_CSS = \"//api.tiles.mapbox.com/mapbox-gl-js/v1.3.0/mapbox-gl.css\";\n\n/**\n * Add a map to an HTML document.\n */\nexport default function Map({\n  children,\n  cssFile = MAPBOXGL_CSS,\n  ..._props\n}: React.PropsWithChildren<MapProps>): JSX.Element | null {\n  const [cssAdded, setCssAdded] = useState(false);\n\n  // Add the MapboxGL CSS to the document.\n  useEffect(() => {\n    if (cssAdded) {\n      return;\n    }\n\n    const links = document.getElementsByTagName(\"link\");\n    let link: HTMLLinkElement;\n    for (let i = 0; i < links.length; i++) {\n      link = links[i];\n      if (link.href.endsWith(\"mapbox-gl.css\")) {\n        setCssAdded(true);\n        if (isDev) {\n          // tslint:disable-next-line: no-console\n          console.warn(\"The cssFile can not be changed once it has been set.\");\n        }\n        return;\n      }\n    }\n\n    function handleLoad() {\n      setCssAdded(true);\n    }\n\n    const cssLink = document.createElement(\"link\");\n    cssLink.href = cssFile;\n    cssLink.rel = \"stylesheet\";\n    cssLink.addEventListener(\"load\", handleLoad);\n    cssLink.addEventListener(\"error\", handleLoad);\n\n    const head = document.getElementsByTagName(\"head\")[0];\n    head.appendChild(cssLink);\n\n    return () => {\n      cssLink.removeEventListener(\"load\", handleLoad);\n      cssLink.removeEventListener(\"error\", handleLoad);\n    };\n  }, [cssAdded, setCssAdded]);\n\n  return cssAdded ? <MapContainer {..._props}>{children}</MapContainer> : null;\n}\n\nexport interface MapProps extends MapContainerProps {\n  /**\n   * The MapboxGL CSS file to use; defaults to\n   * \"//api.tiles.mapbox.com/mapbox-gl-js/v1.3.0/mapbox-gl.css\".\n   */\n  cssFile?: string;\n}\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/rich/github/remapgl/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Props } from \"docz\";\nimport Map from \"./map\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"map\"\n    }}>{`Map`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<Map/>`}</inlineCode>{` component creates and displays a map. The Map can be controlled and interacted with via its props. The only required prop is `}<inlineCode parentName=\"p\">{`accessToken`}</inlineCode>{`. This is `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.mapbox.com/help/how-mapbox-works/access-tokens/\"\n      }}>{`a string token provided by Mapbox`}</a>{`, you will need to create a Mapbox account to get one.`}</p>\n    <p>{`A Map component can accept a number of other components as children. Data at a specific point is displayed on a map using a `}<a parentName=\"p\" {...{\n        \"href\": \"/marker\"\n      }}>{`Marker`}</a>{`. Information that applies to paths or regions on a map can be applied by `}<a parentName=\"p\" {...{\n        \"href\": \"/layer\"\n      }}>{`Layer`}</a>{` components.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Map} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"sample\"\n    }}>{`Sample`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Map\n  accessToken=\"my_token\"\n  center={[-68.8008887, 44.5591077]}\n  motionType=\"ease\"\n  zoom={9}\n>\n  {\n    markers.map(marker => (\n      <Marker\n        location={marker.location}\n      >{marker.name}</Marker>\n    ))\n  }\n  <Layer\n    id={selectedLayer.id}\n    paint={selectedLayerPaint}\n    source={selectedLayer.source}\n    type=\"path\"\n  />\n  {\n    layers.filter(layer => layer.id !== selectedLayer.id)\n      .map(layer => (\n        <Layer\n          id={layer.id}\n          paint={layerPaint}\n          source={layer.source}\n          type=\"path\"\n        />\n      ))\n  }\n</Map>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"associated-types\"\n    }}>{`Associated types`}</h2>\n    <h3 {...{\n      \"id\": \"animationoptions\"\n    }}>{`AnimationOptions`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Comments`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`duration?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The animation's duration, measured in milliseconds.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`easing?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`(input: number) => number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A function taking a time in the range 0..1 and returning a number where 0 is the initial state and 1 is the final state.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"boundsoptions\"\n    }}>{`BoundsOptions`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Comments`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`bounds`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`LngLatBounds`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Center these bounds in the viewport and use the highest zoom level up to and including maxZoom that fits them in the viewport.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`eventData?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Additional properties to be added to event objects of events triggered by a change.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"centeroptions\"\n    }}>{`CenterOptions`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Comments`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`center`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`LngLat`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The geographical center point of the map. Changing this value will cause the map position to change.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`eventData?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Additional properties to be added to event objects of events triggered by a change.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"lnglat\"\n    }}>{`LngLat`}</h3>\n    <p>{`Represents a geographic location on the map. When using the tuple (array) signature the first element is the longitude and the second element is the latitude.\n`}<inlineCode parentName=\"p\">{`[number, number]`}</inlineCode>{` | `}<inlineCode parentName=\"p\">{`{ lat: number; lng: number; }`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"lnglatbounds\"\n    }}>{`LngLatBounds`}</h3>\n    <p>{`Represents a geographic rectangle on a map. A tuple; the first element is the south west corner, the second element is the north east corner.\n`}<inlineCode parentName=\"p\">{`[LngLat, LngLat]`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"mapboxzoomevent\"\n    }}>{`MapBoxZoomEvent`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Comments`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`originalEvent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`MouseEvent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The DOM event which caused the map event.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"mapdataevent\"\n    }}>{`MapDataEvent`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Comments`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`coord?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Coordinate`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The coordinate of the tile if the event has a dataType of \"source\" and the event is related to loading of a tile.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`dataType`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The type of data that has changed. One of \"source\" or \"style\".`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isSourceLoaded?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`True if the event has a dataType of source and the source has no outstanding network requests.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`source?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The style spec representation of the source if the event has a dataType of \"source\".`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`sourceDataType?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Included if the event has a dataType of \"source\" and the event signals that internal data has been received or changed. Possible values are \"metadata\" and \"content\".`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tile?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The tile being loaded or changed, if the event has a dataType of \"source\" and the event is related to loading of a tile.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The event type.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"mapmouseevent\"\n    }}>{`MapMouseEvent`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Comments`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`defaultPrevented`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true if preventDefault has been called.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`lngLat`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`LngLat`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The geographic location on the map of the mouse cursor.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`originalEvent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Event`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The DOM event which caused the map event.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`point`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`*`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The pixel coordinates of the mouse cursor, relative to the map and measured from the top left corner.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`preventDefault`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`() => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prevents subsequent default processing of the event by the map.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`target`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Map`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The object that fired the event.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`*`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The event type.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"maptouchevent\"\n    }}>{`MapTouchEvent`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Comments`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`defaultPrevented`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true if preventDefault has been called.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`lngLat`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`LngLat`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The geographic location on the map of the center of the touch event points.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`lngLats`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`LngLat`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The geographical locations on the map corresponding to a touch event's touches property.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`originalEvent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Event`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The DOM event which caused the map event.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`point`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`*`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The pixel coordinates of the center of the touch event points, relative to the map and measured from the top left corner.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`points`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`*`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The array of pixel coordinates corresponding to a touch event's touches property.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`preventDefault`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`() => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prevents subsequent default processing of the event by the map.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`target`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Map`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The object that fired the event.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`*`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The event type.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"mapwheelevent\"\n    }}>{`MapWheelEvent`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Comments`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`defaultPrevented`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true if preventDefault has been called.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`originalEvent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Event`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The DOM event which caused the map event.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`preventDefault`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`() => void`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prevents subsequent default processing of the event by the map.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`target`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Map`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The object that fired the event.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`*`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The event type.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"motiontype\"\n    }}>{`MotionType`}</h3>\n    <p>{`Type of motion the camera should use when transitioning from one location to another.\n`}<inlineCode parentName=\"p\">{`\"ease\" | \"fly\" | \"jump\"`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"zoomoptions\"\n    }}>{`ZoomOptions`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Comments`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`eventData?`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Additional properties to be added to event objects of events triggered by a change.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\">{`zoom`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The zoom level of the map.`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}