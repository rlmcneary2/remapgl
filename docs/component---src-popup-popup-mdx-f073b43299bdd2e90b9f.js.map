{"version":3,"sources":["webpack:///../src/popup/popup.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","Popup","isMDXComponent"],"mappings":"8fAQO,IAAMA,EAAe,Q,qMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,SADR,SAGA,4BAAW,0BAAYC,WAAW,KAAvB,YAAX,4BAA4F,mBAAGA,WAAW,KAAQ,CAC9G,KAAQ,WADgF,OAA5F,uBAEwC,0BAAYA,WAAW,KAAvB,SAFxC,YAEsG,mBAAGA,WAAW,KAAQ,CACxH,KAAQ,oBAD0F,UAFtG,kEAKA,iBAAQ,CACN,GAAM,SADR,SAGA,0DAAyC,0BAAYA,WAAW,KAAvB,YAAzC,eACA,YAAC,IAAD,CAAOC,GAAIC,IAAOH,QAAQ,W,4LAK9BH,EAAWO,gBAAiB","file":"component---src-popup-popup-mdx-f073b43299bdd2e90b9f.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/rich/github/remapgl/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Props } from \"docz\";\nimport Popup from \"./popup\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"popup\"\n    }}>{`Popup`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<Popup/>`}</inlineCode>{` component is a child of `}<a parentName=\"p\" {...{\n        \"href\": \"../map\"\n      }}>{`Map`}</a>{` or returned by the `}<inlineCode parentName=\"p\">{`popup`}</inlineCode>{` prop of `}<a parentName=\"p\" {...{\n        \"href\": \"/remapgl/marker\"\n      }}>{`Marker`}</a>{`, it provides information when the user manipulates a control.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <p>{`Props that can be passed to every `}<inlineCode parentName=\"p\">{`<Popup/>`}</inlineCode>{` component.`}</p>\n    <Props of={Popup} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}