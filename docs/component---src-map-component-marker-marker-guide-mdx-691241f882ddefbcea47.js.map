{"version":3,"sources":["webpack:///../src/map/component/marker/marker-guide.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","src","style","title","allow","sandbox","isMDXComponent"],"mappings":"0eAMO,IAAMA,EAAe,Q,2NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,UADR,UAGA,4BAAW,mBAAGC,WAAW,KAAQ,CAC7B,KAAQ,2FADD,+BAAX,8DAKA,sBAAQC,IAAI,yFAAyFC,MAAO,CAC1G,MAAS,OACT,OAAU,QACV,OAAU,IACV,aAAgB,MAChB,SAAY,UACXC,MAAM,cAAcC,MAAM,2HAENC,QAAQ,0EAE/B,iBAAQ,CACN,GAAM,eADR,eAGA,iLAEF,mBAAGL,WAAW,KAAQ,CAChB,KAAQ,sBADd,OAFE,eAKA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,ieAyBL,iBAAQ,CACN,GAAM,kBADR,kBAGA,uTAGkD,0BAAYA,WAAW,KAAvB,SAHlD,oDAKA,yGACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,osDAgBL,iBAAQ,CACN,GAAM,UADR,UAGA,iHACS,mBAAGA,WAAW,KAAQ,CAC3B,KAAQ,qDADH,+CADT,kDAMA,2GACI,0BAAYA,WAAW,KAAvB,iCADJ,wIAIA,iBAAQ,CACN,GAAM,UADR,UAGA,8GACE,0BAAYA,WAAW,KAAvB,SADF,iKAIA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,8JAaL,iBAAQ,CACN,GAAM,SADR,SAGA,gEAA+C,0BAAYA,WAAW,KAAvB,aAA/C,yDACqB,mBAAGA,WAAW,KAAQ,CACvC,KAAQ,uCADS,qBADrB,QAIC,mBAAGA,WAAW,KAAQ,CACnB,KAAQ,mCADX,mBAJD,sD,kNAYJJ,EAAWU,gBAAiB","file":"component---src-map-component-marker-marker-guide-mdx-691241f882ddefbcea47.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/rich/github/remapgl/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"marker\"\n    }}>{`Marker`}</h1>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/embed/map-markers-54jez?fontsize=14&hidenavigation=1&theme=dark\"\n      }}>{`Code Sandbox \"Map\nMarkers\"`}</a>{`\nis a working example of working with Markers in remapgl.`}</p>\n    <iframe src=\"https://codesandbox.io/embed/map-markers-54jez?fontsize=14&hidenavigation=1&theme=dark\" style={{\n      \"width\": \"100%\",\n      \"height\": \"500px\",\n      \"border\": \"0\",\n      \"borderRadius\": \"4px\",\n      \"overflow\": \"hidden\"\n    }} title=\"Map Markers\" allow=\"geolocation; microphone;\n     camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor;\n     encrypted-media; usb\" sandbox=\"allow-modals allow-forms allow-popups\n     allow-scripts allow-same-origin\"></iframe>\n    <h2 {...{\n      \"id\": \"sample-code\"\n    }}>{`Sample Code`}</h2>\n    <p>{`The following code illustrates how an array of objects with information about\nvehicles are being changed into Marker components that are children of a\n`}<a parentName=\"p\" {...{\n        \"href\": \"/remapgl/docs/map\"\n      }}>{`Map`}</a>{` component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Map accessToken={accessToken}>\n  {vehicles.map(vehicle => {\n      const { label, ...props } = vehicle;\n      return (\n        <Marker\n          {...props}\n          draggable={false}\n          key={label}\n          popup={\n            {\n              content: (\n                <p>{\\`Vehicle: \\${label}\\`}</p>\n              ),\n              options: {\n                offset: 40\n              }\n            }\n          }\n        />\n      );\n    })}\n</Map>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"custom-markers\"\n    }}>{`Custom Markers`}</h2>\n    <p>{`A Marker component optionally accepts children. These child components will be\nrendered as DOM objects to determine the appearance of the Marker. If no\nchildren are provided the default Mapbox GL marker will be displayed. The color\nof the default marker can be changed by setting the `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` prop. If not provided\nthe marker will be blue.`}</p>\n    <p>{`The following example sets an SVG image of 30 pixels by 30 pixels as the marker:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Marker key={key} location={location}>\n  <div style={{ height: \"30px\", width: \"30px\" }}>\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 11 11\"\n    >\n      <g transform=\"translate(-68.385 -172.48)\">\n        <circle cx=\"73.885\" cy=\"177.98\" r=\"2.86\" fill=\"#fff\" id=\"icon-fill\"/>\n        <path style=\"line-height:normal;font-variant-ligatures:normal;font-variant-position:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-alternates:normal;font-feature-settings:normal;text-indent:0;text-align:start;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000;text-transform:none;text-orientation:mixed;shape-padding:0;isolation:auto;mix-blend-mode:normal\" d=\"M73.885 174.855a3.13 3.13 0 0 0-3.125 3.126 3.129 3.129 0 0 0 3.125 3.125 3.13 3.13 0 0 0 3.125-3.125 3.13 3.13 0 0 0-3.125-3.126zm0 .53a2.592 2.592 0 0 1 2.595 2.596 2.592 2.592 0 0 1-2.595 2.595 2.592 2.592 0 0 1-2.596-2.595 2.592 2.592 0 0 1 2.596-2.596zm-.001.455c-.385 0-.9.11-1.121.202-.22.091-.367.183-.413.412l-.165 1.27v1.752h.285v.275c0 .334.49.334.49 0v-.275h1.848v.275c0 .334.49.334.49 0v-.275h.284v-1.75l-.165-1.272c-.046-.229-.192-.32-.413-.412-.22-.093-.736-.202-1.12-.202zm-.769.281h1.536c.152 0 .152.286 0 .286h-1.535c-.152 0-.152-.285 0-.286zm-.362.454h2.263c.066 0 .122.048.134.111l.134 1.002a.136.136 0 0 1-.13.17h-2.538a.136.136 0 0 1-.13-.17l.135-1.002a.135.135 0 0 1 .132-.11zm-.038 1.858a.259.259 0 0 1 0 .518.259.259 0 1 1 0-.518zm2.345.001a.258.258 0 0 1-.007.517.259.259 0 0 1-.26-.26.258.258 0 0 1 .267-.257z\" color=\"#000\" font-weight=\"400\" font-family=\"sans-serif\" white-space=\"normal\" overflow=\"visible\" id=\"icon-path\"/>\n      </g>\n    </svg>\n  </div>\n</Marker>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"events\"\n    }}>{`Events`}</h2>\n    <p>{`The events onDrag, onDragstart, and onDragend are special events provided by\nMapbox GL. `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.mapbox.com/mapbox-gl-js/api/#marker\"\n      }}>{`See their marker documentation for\ndetails`}</a>{` about the event\nobject provided to handlers.`}</p>\n    <p>{`Other event handlers may be attached to Markers using standard React naming\n(e.g. `}<inlineCode parentName=\"p\">{`<Marker onClick={() => {}} />`}</inlineCode>{`). The event objects provided as the\nhandler parameter will NOT be React SyntheticEvents, they will be standard DOM\nEvent objects.`}</p>\n    <h2 {...{\n      \"id\": \"popups\"\n    }}>{`Popups`}</h2>\n    <p>{`Any Marker can have a popup with custom content via a component provided through\nthe `}<inlineCode parentName=\"p\">{`popup`}</inlineCode>{` prop. By default this popup will be shown when the marker is clicked\nand hidden when the marker is clicked again or the optional \"close\" button is\ntapped.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Marker\n  popup={\n    {\n      content: (<MyComponent>This is a popup!</MyComponent>),\n      options: {\n        offset: 40\n      }\n    }\n  }\n/>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"style\"\n    }}>{`Style`}</h2>\n    <p>{`A custom Marker may be styled using the `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{` prop. This means most CSS in\nJS type libraries like `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.styled-components.com/\"\n      }}>{`styled-components`}</a>{`\nor `}<a parentName=\"p\" {...{\n        \"href\": \"https://emotion.sh/docs/styled\"\n      }}>{`@emotion/styled`}</a>{` can be used to define the\nMarker's appearance. `}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}