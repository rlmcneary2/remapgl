(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{F8WB:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return l})),t.d(a,"default",(function(){return p}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk");var r=t("/FXl"),n=t("TjRS");t("aD51");function o(){return(o=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var l={};void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/layer/mapboxgl/layer-guide.mdx"}});var s={_frontmatter:l},i=n.a;function p(e){var a=e.components,t=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,["components"]);return Object(r.b)(i,o({},s,t,{components:a,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"layer"},"Layer"),Object(r.b)("p",null,"The ",Object(r.b)("a",o({parentName:"p"},{href:"https://codesandbox.io/embed/map-layers-w2hu4?fontsize=14&hidenavigation=1&theme=dark"}),'Code Sandbox "Map\nLayers"'),"\nis a working example of working with Layers in remapgl."),Object(r.b)("iframe",{src:"https://codesandbox.io/embed/map-layers-w2hu4?fontsize=14&hidenavigation=1&theme=dark",style:{width:"100%",height:"500px",border:"0",borderRadius:"4px",overflow:"hidden"},title:"Map Layers",allow:"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb",sandbox:"allow-modals allow-forms allow-popups allow-scripts allow-same-origin"}),Object(r.b)("h2",{id:"sample-code"},"Sample Code"),Object(r.b)("p",null,"The following code illustrates how an array of objects with layer data is being\nmapped into Layer components that are children of a ",Object(r.b)("a",o({parentName:"p"},{href:"/remapgl/docs/map"}),"Map")," component."),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-jsx"}),"<Map accessToken={accessToken}>\n  {layers.map(layer => (\n      <Layer\n        id={`${layer.id}.${layer.type}`}\n        key={`${layer.id}.${layer.type}`}\n        paint={layerPaint(layer)}\n        source={layerSource(layer)}\n        type={layer.type}\n      />\n    ))}\n</Map>\n")),Object(r.b)("h2",{id:"types"},"Types"),Object(r.b)("p",null,'There are different types of Mapbox GL layers. They allow a variety of different\ngeometric objects to be drawn on the map including circles, lines, and polygons.\nLayers are typically made of two parts: a "source" that defines the shape of\nthe layer, and "paint" that configures how the geometry appears when rendered.'),Object(r.b)("p",null,"Layers are complex - for details about layer types, styles, and options that\nchange their appearance consult the ",Object(r.b)("a",o({parentName:"p"},{href:"https://docs.mapbox.com/mapbox-gl-js/style-spec/#layers"}),"Mapbox GL\ndocumentation"),"."),Object(r.b)("h2",{id:"order"},"Order"),Object(r.b)("p",null,"The order of the layers that are children of a Map affects how the layers are\nrendered in the map. In the same way that lower elements in an HTML document\noverlap higher layers, the last layer in an array of layers will appear above\nthe other layers."),Object(r.b)("p",null,"Note that Mapbox GL layers do not result in DOM objects. Layers are rendered as\ngraphics in the map."))}p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/layer/mapboxgl/layer-guide.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-layer-mapboxgl-layer-guide-mdx-d09da1e17fc3adc6f420.js.map