{"version":3,"sources":["webpack:///../src/user-interface/attribution.tsx","webpack:///../src/user-interface/attribution.mdx"],"names":["Attribution","compact","customAttribution","map","useMap","useEffect","attribution","AttributionControl","addControl","removeControl","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","isMDXComponent"],"mappings":"0OAKe,SAASA,EAAT,GAAqF,QAA9DC,eAA8D,SAA7CC,EAA6C,EAA7CA,kBAC/CC,EAAMC,cAQZ,OANAC,oBAAU,WACR,IAAMC,EAAc,IAAIC,qBAAmB,CAAEN,UAASC,sBAEtD,OADAC,EAAIK,WAAYF,GACT,WAAQH,EAAIM,cAAcH,KAChC,CAACH,EAAKF,EAASC,IAEX,K,u0BCNF,IAAMQ,EAAe,Q,oNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,eADR,eAGA,4BAAW,0BAAYC,WAAW,KAAvB,kBAAX,4BAAkG,mBAAGA,WAAW,KAAQ,CACpH,KAAQ,WADsF,OAAlG,iBAEkC,mBAAGA,WAAW,KAAQ,CACpD,KAAQ,+DADsB,2BAFlC,iCAKA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOC,GAAInB,EAAaiB,QAAQ,W,2MAKpCH,EAAWM,gBAAiB","file":"component---src-user-interface-attribution-mdx-493183899970592f835f.js","sourcesContent":["import { AttributionControl } from \"mapbox-gl\";\nimport React, { useEffect } from \"react\";\nimport { useMap } from \"../map/map-context\";\n\n\nexport default function Attribution({ compact = false, customAttribution }: AttributionProps): null {\n  const map = useMap();\n\n  useEffect(() => {\n    const attribution = new AttributionControl({ compact, customAttribution });\n    map.addControl (attribution);\n    return () => { map.removeControl(attribution); };\n  }, [map, compact, customAttribution]);\n\n  return null;\n}\n\nexport interface AttributionProps {\n  /**\n   * If true force a compact attribution that shows the full attribution on\n   * mouse hover, or if false force the full attribution control.\n   */\n  compact?: boolean;\n  /**\n   * String or strings to show in addition to any other attributions.\n   */\n  customAttribution?: string | string[];\n}\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/rich/github/remapgl/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Props } from \"docz\";\nimport Attribution from \"./attribution\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"attribution\"\n    }}>{`Attribution`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<Attribution/>`}</inlineCode>{` component is a child of `}<a parentName=\"p\" {...{\n        \"href\": \"../map\"\n      }}>{`Map`}</a>{`, it sets the `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.mapbox.com/help/how-mapbox-works/attribution/\"\n      }}>{`attribution information`}</a>{` that will appear on the map.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Attribution} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}